"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[663],{4753:function(t,r,e){e.d(r,{Bt:function(){return l},JN:function(){return U},LK:function(){return h},M6:function(){return s},P0:function(){return A},RV:function(){return v},Rf:function(){return p},WB:function(){return T},cX:function(){return E},cn:function(){return f},fW:function(){return R},h8:function(){return m},hB:function(){return d},iO:function(){return w},sl:function(){return u},vw:function(){return i},x1:function(){return g},xX:function(){return y}});let n=null,a=null;async function o(){return a||(n?void 0:a=(async()=>{try{{console.log("[SETTINGS] Initializing API endpoints from environment variables...");let t={orchestratorApiUrl:"https://ama-orchestrator-gem-26629455103.us-central1.run.app",centralApiUrl:"https://ama-central-api-26629455103.us-west1.run.app",adminApiUrl:"https://ama-admin-api-26629455103.us-central1.run.app",scrapingOrchestratorApiUrl:"https://ama-scraping-orchestrator-26629455103.us-west1.run.app",eventProcessorApiUrl:"https://ama-event-processor-26629455103.us-west1.run.app",environment:"development"},r=[];if(t.orchestratorApiUrl||r.push("NEXT_PUBLIC_ORCHESTRATOR_API_URL"),t.centralApiUrl||r.push("NEXT_PUBLIC_CENTRAL_API_URL"),t.adminApiUrl||r.push("NEXT_PUBLIC_ADMIN_API_URL"),t.scrapingOrchestratorApiUrl||r.push("NEXT_PUBLIC_SCRAPING_ORCHESTRATOR_API_URL"),t.eventProcessorApiUrl||r.push("NEXT_PUBLIC_EVENT_PROCESSOR_API_URL"),r.length>0)throw Error("Missing environment variables: ".concat(r.join(", ")));n=t,console.log("[SUCCESS] All API endpoints initialized from environment variables:",{orchestrator:t.orchestratorApiUrl?"✓":"✗",central:t.centralApiUrl?"✓":"✗",admin:t.adminApiUrl?"✓":"✗",scrapingOrchestrator:t.scrapingOrchestratorApiUrl?"✓":"✗",environment:t.environment,source:"environment-variables"})}}catch(t){throw console.error("CRITICAL: Could not initialize API endpoints.",t),a=null,t}})())}class c{async request(t){let r,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"agent-orchestrator";if(!t||"string"!=typeof t)throw Error("Invalid endpoint provided");if(t.startsWith("/")||(t="/"+t),await o(),!n)throw Error("API configuration is not loaded.");switch(a){case"central":r=n.centralApiUrl;break;case"admin":r=n.adminApiUrl;break;case"scraping-orchestrator":r=n.scrapingOrchestratorApiUrl;break;case"event-processor":r=n.eventProcessorApiUrl;break;default:r=n.orchestratorApiUrl}if(!r||"string"!=typeof r)throw Error("Invalid base URL for ".concat(a," API"));let c="".concat(r).concat(t),s={...e,headers:{"Content-Type":"application/json",Accept:"application/json",...e.headers}},i=1;for(;i<=3;)try{console.log("[API] ".concat(a.toUpperCase()," ").concat(s.method||"GET",":").concat(t," (attempt ").concat(i,")"));let r=new AbortController,e=setTimeout(()=>r.abort(),3e4),n=await fetch(c,{...s,signal:r.signal});clearTimeout(e);let o="";try{o=await n.text()}catch(t){console.warn("Could not read response text:",t),o=""}if(!n.ok){if(console.error("[ERROR] API Error ".concat(n.status," for ").concat(a,":"),o),(0===n.status||n.status>=500)&&i<3){let t=1e3*Math.pow(2,i);console.log("[RETRY] Retrying in ".concat(t,"ms...")),await new Promise(r=>setTimeout(r,t)),i++;continue}throw Error("HTTP ".concat(n.status,": ").concat(o||"Unknown error"))}if(console.log("[SUCCESS] ".concat(a," API success")),""===o.trim())return null;try{return JSON.parse(o)}catch(t){return console.warn("Response is not valid JSON, returning as text"),o}}catch(r){if(console.error("[ERROR] Request attempt ".concat(i," failed:"),r.message),3===i)throw Error("Failed after ".concat(3," attempts: ").concat(r.message));let t=1e3*Math.pow(2,i);console.log("[RETRY] Retrying in ".concat(t,"ms...")),await new Promise(r=>setTimeout(r,t)),i++}}async authenticatedRequest(t,r){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"agent-orchestrator";if(!r||"string"!=typeof r)throw Error("Invalid authentication token provided");let a={...e,headers:{...e.headers,Authorization:"Bearer ".concat(r.trim())}};return this.request(t,a,n)}async authenticatedFileUpload(t,r,e){let a,c=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"admin";if(!r)throw Error("Invalid authentication token provided");if(t.startsWith("/")||(t="/"+t),await o(),!n)throw Error("API configuration is not loaded.");switch(s){case"central":a=n.centralApiUrl;break;case"admin":a=n.adminApiUrl;break;case"scraping-orchestrator":a=n.scrapingOrchestratorApiUrl;break;case"event-processor":a=n.eventProcessorApiUrl;break;default:a=n.orchestratorApiUrl}let i="".concat(a).concat(t),u=new FormData;u.append("document",e);let l={...c,method:"POST",headers:{Authorization:"Bearer ".concat(r.trim())},body:u},h=await fetch(i,l);if(!h.ok){let t=await h.text();throw Error("HTTP ".concat(h.status,": ").concat(t||"File upload failed"))}return h.json()}getConfig(){return n?{orchestratorApiUrl:n.orchestratorApiUrl,centralApiUrl:n.centralApiUrl,adminApiUrl:n.adminApiUrl,scrapingOrchestratorApiUrl:n.scrapingOrchestratorApiUrl,environment:n.environment||"unknown"}:{orchestratorApiUrl:"https://ama-orchestrator-gem-26629455103.us-central1.run.app",centralApiUrl:"https://ama-central-api-26629455103.us-west1.run.app",adminApiUrl:"https://ama-admin-api-26629455103.us-central1.run.app",scrapingOrchestratorApiUrl:"https://ama-scraping-orchestrator-26629455103.us-west1.run.app",environment:"development"}}async testAllApis(){let t={"agent-orchestrator":{status:"unknown",error:null},central:{status:"unknown",error:null},admin:{status:"unknown",error:null},"scraping-orchestrator":{status:"unknown",error:null}};for(let r of["agent-orchestrator","central","admin","scraping-orchestrator"])try{let e=await this.request("/health",{},r);t[r]={status:"healthy",error:null},console.log("[SUCCESS] ".concat(r," API health check passed:"),e)}catch(e){t[r]={status:"error",error:e.message},console.error("[ERROR] ".concat(r," API health check failed:"),e.message)}return t}}async function s(t,r){if(await o(),!n)throw Error("API configuration is not loaded.");let e="".concat(n.orchestratorApiUrl,"/chat/stream");try{var a;console.log("[CHAT] Starting gem conversation stream...");let n=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json",Accept:"text/plain"},body:JSON.stringify({prompt:t})});if(!n.ok){let t=await n.text();throw Error("HTTP ".concat(n.status,": ").concat(t||"Unknown error"))}let o=null===(a=n.body)||void 0===a?void 0:a.getReader();if(!o)throw Error("Response body is not readable");let c=new TextDecoder;for(;;){let{done:t,value:e}=await o.read();if(t)break;let n=c.decode(e,{stream:!0});r&&n&&r(n)}console.log("[SUCCESS] Gem conversation stream completed")}catch(t){throw console.error("[ERROR] Gem conversation stream failed:",t.message),t}}async function i(t){return await g.authenticatedRequest("/events",t,{},"central")}async function u(t){return await g.authenticatedRequest("/admin/events/pending",t,{},"central")}async function l(t,r){return await g.authenticatedRequest("/events/".concat(r),t,{method:"DELETE"},"central")}async function h(t){return await g.authenticatedRequest("/admin/cache/clear",t,{method:"DELETE"},"central")}async function p(t){return await g.authenticatedRequest("/users",t,{},"admin")}async function d(t,r,e){return await g.authenticatedRequest("/set-roles",e,{method:"POST",body:JSON.stringify({email:t,roles:r})},"admin")}async function f(t,r,e){return await g.authenticatedRequest("/users",e,{method:"POST",body:JSON.stringify({email:t,roles:r})},"admin")}async function m(t,r){return await g.authenticatedRequest("/users/".concat(t),r,{method:"DELETE"},"admin")}let g=new c;async function A(t,r,e,n){let a={frequency:e};return n&&(a.customHours=n),await g.authenticatedRequest("/sources/".concat(r,"/frequency"),t,{method:"PATCH",body:JSON.stringify(a)},"scraping-orchestrator")}async function w(t,r){return await g.authenticatedRequest("/sources/frequency/bulk",t,{method:"PATCH",body:JSON.stringify({updates:r})},"scraping-orchestrator")}async function y(t,r,e){return await g.authenticatedRequest("/sources/".concat(r,"/group"),t,{method:"PATCH",body:JSON.stringify({groupName:e})},"scraping-orchestrator")}async function R(t,r){return await g.authenticatedRequest("/sources/group/bulk",t,{method:"PATCH",body:JSON.stringify({updates:r})},"scraping-orchestrator")}async function U(t,r){return await g.authenticatedRequest("/sources/".concat(r),t,{method:"DELETE"},"admin")}async function E(t,r){return await g.authenticatedRequest("/sources/bulk-delete",t,{method:"DELETE",body:JSON.stringify({sourceIds:r})},"admin")}async function v(t,r,e){return await g.authenticatedRequest("/sources/".concat(r),t,{method:"PATCH",body:JSON.stringify({isActive:e})},"scraping-orchestrator")}async function T(t,r){let e=[],n=[];for(let a of r)try{let r=await g.authenticatedRequest("/trigger-source",t,{method:"POST",body:JSON.stringify({sourceId:a})},"scraping-orchestrator");e.push({sourceId:a,success:!0,result:r})}catch(t){n.push({sourceId:a,success:!1,error:t.message})}if(0===n.length)return{message:"Successfully triggered scraping for ".concat(e.length," sources"),success:!0,results:e};if(0!==e.length)return{message:"Partially successful: ".concat(e.length," succeeded, ").concat(n.length," failed"),success:!0,results:e,errors:n};throw Error("Failed to trigger scraping for all ".concat(n.length," sources. First error: ").concat(n[0].error))}}}]);